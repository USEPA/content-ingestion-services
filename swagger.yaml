swagger: "2.0"
info:
  description: "The content ingestion services (CIS) are used by EPA to power records management applications."
  version: "0.0.1"
  title: "EPA Content Ingestion Services"
  contact:
    email: "yuen.andrew@epa.gov"
host: "localhost:8000"
basePath: "/"
tags:
- name: "record_schedules"
  description: "APIs to access record schedule information."
- name: "desktop"
  description: "APIs to support desktop file upload."
- name: "email"
  description: "APIs to support email file upload."
- name: "sharepoint"
  description: "APIs to support Sharepoint integration."
- name: "my_records"
  description: "APIs for users to access their records."
- name: "settings"
  description: "APIs to access and edit user settings."
- name: "schedule_predictions"
  description: "All APIs that provide record schedule recommendations."
- name: "user_info"
  description: "APIs to give information about the user."
- name: "sems"
  description: "APIs for integration with SEMS."
- name: "help"
  description: "APIs for accessing help content."
- name: "gamification"
  description: "APIs which enable user activity tracking, leaderboards, and badges."
- name: "keyword_extraction"
  description: "APIs which enable keyword and identifier extraction."

schemes:
- https
- http
paths:
  /file_metadata_prediction:
    post:
      tags:
      - "schedule_predictions"
      - "desktop"
      summary: "Gets record schedule, title, and description recommendations for a document."
      consumes:
        - multipart/form-data
      parameters:
        - in: "formData"
          name: "file"
          type: "file"
          description: "The file to get recommendations for."
        - in: "formData"
          name: "prediction_metadata"
          type: string
          description: "String of serialized JSON with prediction metadata."
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Recommendations were successfully given."
          schema:
            $ref: "#/definitions/MetadataPrediction"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /text_metadata_prediction:
    post:
      tags:
      - "schedule_predictions"
      summary: "Gets record schedule recommendation for given text."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "TextPredictionRequest"
          schema: 
            $ref: "#/definitions/TextPredictionRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Recommendations were successfully given."
          schema:
            $ref: "#/definitions/MetadataPrediction"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /email_metadata_prediction:
    get:
      tags:
      - "schedule_predictions"
      - "email"
      summary: "Gets metadata recommendations for given email."
      consumes:
        - application/json
      parameters:
        - in: query
          name: "email_id"
          type: string
        - in: query
          name: "file_name"
          type: string
        - in: query
          name: "department"
          type: string
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          description: "Recommendations were successfully given."
          schema:
            $ref: "#/definitions/MetadataPrediction"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_user_info:
    get:
      tags:
      - "user_info"
      summary: "Gets name, LAN ID, and department information for the user."
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "User information retrieved."
          schema:
            $ref: "#/definitions/UserInfo"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /upload_file:
    post:
      tags:
      - "desktop"
      summary: "Upload a file to ECMS with metadata."
      consumes:
        - multipart/form-data
      parameters:
        - in: "formData"
          name: "file"
          type: "file"
          description: "Binary content of file to upload."
        - in: "formData"
          name: "metadata"
          type: string
          description: "String of serialized JSON with ECMS metadata."
        - in: "formData"
          name: "user_activity"
          type: string
          description: "String of serialized JSON with user activity data."
        - in: "formData"
          name: "documentum_env"
          type: string
          description: "Environment - either dev or prod."
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "File was successfully uploaded."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_mailboxes:
    get:
      tags:
      - "email"
      summary: "List the mailboxes to which the user has access."
      consumes:
        - application/json
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Mailboxes successfully listed."
          schema:
            $ref: "#/definitions/GetMailboxesResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_emails:
    get:
      tags:
      - "email"
      summary: "List the emails in a given mailbox."
      consumes:
        - application/json
      parameters:
        - in: query
          name: "mailbox"
          type: string
        - in: query
          name: "items_per_page"
          type: integer
        - in: query
          name: "page_number"
          type: integer
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          description: "Emails successfully retrieved."
          schema:
            $ref: "#/definitions/GetEmailResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  
  /upload_email:
    post:
      tags:
        - "email"
      summary: "Upload email to ECMS with metadata."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "upload_request"
          schema: 
            $ref: "#/definitions/UploadEmailRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          description: "Email successfully uploaded."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /download_email:
    get:
      tags:
      - "email"
      summary: "Download an email as an EML file."
      consumes:
        - application/json
      parameters:
        - in: query
          name: "file_name"
          type: string
        - in: query
          name: "email_id"
          type: string
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          description: "EML file downloaded."
          schema:
            type: "file"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /mark_email_saved:
    post:
      tags:
      - "email"
      summary: "Mark an email with the saved tag in Outlook."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "MarkSavedRequest"
          schema: 
            $ref: "#/definitions/MarkSavedRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          description: "Email marked as saved."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /untag_email:
    post:
      tags:
      - "email"
      summary: "Remove record tag in Outlook."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "UntagRequest"
          schema: 
            $ref: "#/definitions/UntagRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          description: "Record tag for email has been removed."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_favorites:
    get:
      tags:
      - "settings"
      summary: "Get record schedules favorited by user."
      consumes:
        - application/json
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Favorites were added."
          schema:
            $ref: "#/definitions/GetFavoritesResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /add_favorites:
    post:
      tags:
      - "settings"
      summary: "Add favorites for user."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "favs"
          description: "Lan ID for the user whose favorites are to be added and the IDs of the new favs."
          schema:
            $ref: "#/definitions/AddFavoritesRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Favorites were added."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /remove_favorites:
    post:
      tags:
      - "settings"
      summary: "Remove favorites for user."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "RemoveFavoritesRequest"
          description: "Lan ID for the user whose favorites are to be removed and the IDs of the favs."
          schema:
            $ref: "#/definitions/RemoveFavoritesRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Favorites were removed."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /update_preferred_system:
    post:
      tags:
      - "settings"
      summary: "Update preferred records management system for user."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "system"
          description: "System to set as the new default."
          schema:
            $ref: "#/definitions/UpdatePreferredSystemRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Preferred system was updated."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /update_default_edit_mode:
    post:
      tags:
      - "settings"
      summary: "Update default edit mode for user."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "edit_mode"
          description: "Edit mode (basic or advanced) to set as the new default."
          schema:
            $ref: "#/definitions/UpdateEditModeRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Default edit mode was updated."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_record_schedules:
    get:
      tags:
      - "record_schedules"
      summary: "Get record schedule information."
      consumes:
        - application/json
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Record schedule information retrieved."
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /my_records:
    get:
      tags:
      - "my_records"
      summary: "Get information for existing records."
      consumes:
        - application/json
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: query
          name: "lan_id"
          type: string
          required: true
        - in: query
          name: query
          type: string
          required: false
        - in: query
          name: "items_per_page"
          type: number
          required: true
        - in: query
          name: "page_number"
          type: number
          required: true
        - in: query
          name: "documentum_env"
          type: string
          required: false
          default: "dev"
      responses:
        200:
          description: "Record information retrieved."
          schema:
            $ref: "#/definitions/DocumentumRecordList"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /my_records_download:
    get:
      tags:
      - "my_records"
      summary: "Download existing records."
      consumes:
        - application/json
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: query
          name: "lan_id"
          type: string
          required: true
        - in: query
          name: "object_ids"
          type: array
          items:
            type: string
          required: true
        - in: query
          name: "documentum_env"
          type: string
          required: false
          default: "dev"
      responses:
        200:
          description: "Records zip file downloaded."
          schema:
            type: "file"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_sites:
    get:
      tags:
      - "sems"
      summary: "Gets SEMS site information."
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: query
          name: "region_id"
          type: array
          items:
            type: string
          required: true
        - in: query
          name: "program_type"
          type: string
          required: false
        - in: query
          name: "search_term"
          type: string
          required: false
        - in: query
          name: "page_size"
          type: string
          required: false
        - in: query
          name: "page_start"
          type: string
          required: false
      responses:
        200:
          description: "Site information retrieved."
          schema:
            $ref: "#/definitions/GetSitesResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_special_processing:
    get:
      tags:
      - "sems"
      summary: "Gets SEMS special processing information."
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: query
          name: "region"
          type: string
          required: true
      responses:
        200:
          description: "Special processing information retrieved."
          schema:
            $ref: "#/definitions/GetSpecialProcessingResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_sharepoint_records:
    get:
      tags:
      - "sharepoint"
      summary: "Get sharepoint list and site IDs for the user."
      consumes:
        - application/json
      parameters:
        - in: query
          name: "page_number"
          type: integer
          required: false
        - in: query
          name: "items_per_page"
          type: integer
          required: false
        - in: query
          name: "filter_type"
          type: string
          enum: ["ready_for_submission", "in_batch"]
          default: "ready_for_submission"
          required: false
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          description: "Sharepoint records were successfully returned."
          schema:
            $ref: "#/definitions/SharepointListResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /sharepoint_metadata_prediction:
    get:
      tags:
      - "sharepoint"
      summary: "Get record schedule predictions for a Sharepoint record."
      consumes:
        - application/json
      parameters:
        - in: query
          name: "drive_item_id"
          type: string
          required: true
        - in: query
          name: "file_name"
          type: string
          required: false
        - in: query
          name: "department"
          type: string
          required: false
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          description: "Sharepoint metadata predictions were successfully returned."
          schema:
            $ref: "#/definitions/MetadataPrediction"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /upload_sharepoint_record:
    post:
      tags:
      - "sharepoint"
      summary: "Upload Sharepoint record to ECMS."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "data"
          description: "ID fields and metadata needed to upload the record."
          schema:
            $ref: "#/definitions/SharepointUploadRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          schema:
            $ref: "#/definitions/StatusResponse"
          description: "Record successfully uploaded."
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /upload_sharepoint_batch:
    post:
      tags:
      - "sharepoint"
      summary: "Upload Sharepoint batch to be processed later."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "data"
          description: "ID fields and metadata needed to specify the batch."
          schema:
            $ref: "#/definitions/SharepointBatchUploadRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: header
          name: "X-Access-Token"
          type: string
          required: true
      responses:
        200:
          schema:
            $ref: "#/definitions/StatusResponse"
          description: "Record successfully uploaded."
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_help_item:
    get:
      tags:
      - "help"
      summary: "Get help item content by item id."
      consumes:
        - application/json
      parameters:
        - in: query
          name: "name"
          type: string
          required: true
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Help item successfully returned."
          schema:
            $ref: "#/definitions/HelpItemResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /get_all_help_items:
    get:
      tags:
      - "help"
      summary: "Get all help items."
      consumes:
        - application/json
      parameters:
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
        - in: query
          name: "override"
          type: bool
          required: false
      responses:
        200:
          description: "Help items successfully returned."
          schema:
            $ref: "#/definitions/AllHelpItemsResponse"
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /save_sems_email:
    post:
      tags:
      - "sems"
      summary: "Save email record to SEMS."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "metadata"
          description: "Metadata needed for submissions to SEMS."
          schema:
            $ref: "#/definitions/SEMSEmailUploadRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          schema:
            $ref: "#/definitions/StatusResponse"
          description: "Record successfully uploaded."
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /log_activity:
    post:
      tags:
      - "gamification"
      summary: "Submit a user action which awards points."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "log_activity_request"
          description: "Activity information."
          schema:
            $ref: "#/definitions/LogActivityRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          schema:
            $ref: "#/definitions/StatusResponse"
          description: "User activity was recorded."
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
  /extract_keywords:
    post:
      tags:
      - "keyword_extraction"
      summary: "Extract keywords from text."
      consumes:
        - application/json
      parameters:
        - in: body
          name: "data"
          description: "Text for extraction."
          schema:
            $ref: "#/definitions/KeywordExtractionRequest"
        - in: header
          name: "Authorization"
          type: string
          format: "jwt"
          required: true
      responses:
        200:
          description: "Extracted keywords."
        400:
          description: "Invalid request - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        401:
          description: "Unauthorized - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"
        500:
          description: "Server side error - description in response."
          schema:
            $ref: "#/definitions/StatusResponse"

definitions:
  Recommendation:
    type: object
    properties:
      schedule: 
        $ref: "#/definitions/RecordSchedule"
      probability:
        type: number
  MetadataPrediction:
    type: object
    properties:
      predicted_schedules:
        type: array
        items: 
          $ref: "#/definitions/Recommendation"
      default_schedule:
        $ref: "#/definitions/RecordSchedule"
      title:
        type: object
        properties:
          value: 
            type: string
          prediction_type:
            type: string
      description:
        type: object
        properties:
          value: 
            type: string
          prediction_type:
            type: string
      subjects:
        type: array
        items:
          type: string
      identifiers:
        type: object
        additionalProperties:
          type: string
      cui_categories:
        type: array
        items:
          type: string
  AddFavoritesRequest:
    type: object
    properties:
      record_schedules:
        type: array
        items: 
          $ref: "#/definitions/RecordSchedule"
  RemoveFavoritesRequest:
    type: object
    properties:
      record_schedules:
        type: array
        items: 
          $ref: "#/definitions/RecordSchedule"
  KeywordExtractionRequest:
    type: object
    properties:
      text:
        type: string
  StatusResponse:
    type: object
    properties:
      status:
        type: string
      reason: 
        type: string
      request_id:
        type: string
  PredictionMetadata:
    type: object
    properties:
      file_name: 
        type: string
      department: 
        type: string
  TextPredictionRequest:
    type: object
    properties:
      text:
        type: string
      prediction_metadata:
        $ref: "#/definitions/PredictionMetadata"
  GetMailboxesResponse:
    type: object
    properties:
      mailboxes:
        type: array
        items: 
          type: string
  SemsSite:
    type: object
    properties:
      _id:
        type: string
      region:
        type: string
      epaid:
        type: string
      sitename:
        type: string
      program_id:
        type: string
      operable_units: 
        type: array
        items:
          type: string
      ssids:
        type: array
        items:
          type: string
      
  GetSitesResponse:
    type: object
    properties:
      sites:
        type: array
        items:
          $ref: "#/definitions/SemsSite"
  SemsSpecialProcessing:
    type: object
    properties:
      description: 
        type: string
      code:
        type: string
  GetSpecialProcessingResponse:
    type: object
    properties:
      special_processing:
        type: array
        items:
          $ref: "#/definitions/SemsSpecialProcessing"
  EmailAttachment:
    type: object
    properties:
      name: 
        type: string
      attachment_id:
        type: string
  GetEmailResponse:
    type: object
    properties:
      total_count: 
        type: integer
      page_number: 
        type: integer
      items_per_page: 
        type: integer
      emails:
        type: array
        items:
          type: object
          properties:
            unid:
              type: string
            email_id: 
              type: string
            _from:
              type: string
            to:
              type: string
            subject:
              type: string
            sent:
              type: string
            received:
              type: string
            attachments:
              type: array
              items: 
                $ref: "#/definitions/EmailAttachment"
            mailbox_source:
              type: string
  UploadEmailRequest:
    type: object
    properties:
      email_id:
        type: string
      email_unid:
        type: string
      metadata:
        $ref: "#/definitions/ECMSMetadata"
      user_activity:
        $ref: "#/definitions/SubmissionAnalyticsMetadata"
      documentum_env:
        type: string
        enum: ["dev", "prod"]
        default: "dev"
  SubmissionAnalyticsMetadata:
    type: object
    properties:
      predicted_schedules:
        type: array
        items:
          $ref: "#/definitions/Recommendation"
      default_schedule:
        $ref: "#/definitions/RecordSchedule"
      used_modal_form:
        type: boolean
      used_recommended_schedule:
        type: boolean
      used_schedule_dropdown:
        type: boolean
      used_default_schedule:
        type: boolean
      used_favorite_schedule:
        type: boolean
  MarkSavedRequest:
    type: object
    properties:
      email_id:
        type: string
      sensitivity:
        type: string
        enum: ["shared", "private"]
  UntagRequest:
    type: object
    properties:
      email_id:
        type: string
  ECMSMetadata:
    type: object
    properties:
      file_path: 
        type: string
      custodian: 
        type: string
      title: 
        type: string
      description:
        type: string
      record_schedule:
        $ref: "#/definitions/RecordSchedule"
      creator: 
        type: string
      creation_date: 
        type: string
      close_date: 
        type: string  
      sensitivity:
        type: string
        enum: ["shared", "private"]
      rights:
        type: array
        items:
          type: string
      coverage:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          type: string
      relationships:
        type: array
        items:
          type: string
  RecordSchedule:
    type: object
    properties:
      function_number: 
        type: string
      schedule_number: 
        type: string
      disposition_number: 
        type: string
  RecordScheduleInformation:
    type: object
    properties:
      function_number: 
        type: string
      schedule_number: 
        type: string
      disposition_number: 
        type: string
      display_name:
        type: string
      schedule_title: 
        type: string 
      disposition_title:
        type: string 
      disposition_instructions:
        type: string 
      cutoff_instructions:
        type: string 
      function_title:
        type: string 
      program:
        type: string 
      applicability:
        type: string 
      nara_disposal_authority_item_level:
        type: string 
      nara_disposal_authority_schedule_level:
        type: string 
      final_disposition:
        type: string 
      disposition_summary:
        type: string 
      description:
        type: string 
      guidance:
        type: string 
      keywords:
        type: string
      ten_year:
        type: boolean
  GetFavoritesResponse:
    type: object
    properties:
      favorites:
        type: array
        items:
          $ref: "#/definitions/RecordSchedule"
  GetRecordSchedulesResponse:
    type: object
    properties:
      schedules:
        type: array
        items:
          $ref: "#/definitions/RecordScheduleInformation"
  UserSettings:
    type: object
    properties:
      preferred_system: 
        type: string
      default_edit_mode: 
        type: string
  UpdatePreferredSystemRequest:
    type: object
    properties:
      preferred_system:
        type: string
  UpdateEditModeRequest:
    type: object
    properties:
      default_edit_mode:
        type: string
  UserInfo:
    type: object
    properties:
      lan_id: 
        type: string
      display_name: 
        type: string
      email: 
        type: string
      department: 
        type: string
      parent_org_code:
        type: string
      employee_number:
        type: string
      badges:
        type: array
        items:
          $ref: "#/definitions/BadgeInfo"
      profile:
        $ref: "#/definitions/ProfileInfo"
      user_settings:
        $ref: "#/definitions/UserSettings"
  BadgeInfo:
    type: object
    properties:
      badge_title: 
        type: string
      badge_description: 
        type: string
      badge_image: 
        type: string
  ProfileInfo:
    type: object
    properties:
      points: 
        type: string
      level: 
        type: string
      office_rank: 
        type: string
      overall_rank: 
        type: string
  DocumentumDocInfo:
    type: object
    properties:
      title: 
        type: string
      doc_type: 
        type: string
      date: 
        type: string
      sensitivity:
        type: string
        enum: ["shared", "private"] 
      doc_id:
        type: string
      object_ids: 
        type: array
        items: 
          type: string
      size: 
        type: number
      custodian:
        type: string
      upload_date:
        type: string
      metadata:
        $ref: "#/definitions/ECMSMetadata"
  DocumentumRecordList:
    type: object
    properties:
      total:
        type: number
      records:
        type: array
        items: 
          $ref: "#/definitions/DocumentumDocInfo"
  SharepointItem:
    type: object
    properties:
      drive_item_id:
        type: string
      list_item_id:
        type: string
      metadata:
        $ref: "#/definitions/ECMSMetadata"
  SharepointBatchUploadRequest:
    type: object
    properties:
      sharepoint_items:
        type: array
        items:
          $ref: "#/definitions/SharepointItem"
      documentum_env:
        type: string
  SharepointRecord:
    type: object
    properties:
      web_url:
        type: string
      records_status:
        type: string
      sensitivity:
        type: string
      drive_item_id:
        type: string
      name:
        type: string
      created_date:
        type: string
      last_modified_date:
        type: string
      list_item_id:
        type: string
      detected_schedule:
        $ref: "#/definitions/RecordSchedule"
  SharepointListResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: "#/definitions/SharepointRecord"
  SharepointUploadRequest:
    type: object
    properties:
      drive_item_id:
        type: string
      metadata:
        $ref: "#/definitions/ECMSMetadata"
      user_activity:
        $ref: "#/definitions/SubmissionAnalyticsMetadata"
      documentum_env:
        type: string
  HelpItemResponse:
    type: object
    properties:
      name:
        type: string
      html_content:
        type: string
      markdown_content:
        type: string
      is_faq:
        type: boolean
      question:
        type: string
  AllHelpItemsResponse:
    type: object
    properties:
      help_items:
        type: array
        items:
          $ref: "#/definitions/HelpItemResponse"
  SEMSEmailUploadRequest:
    type: object
    properties:
      tags:
        type: array
        items:
          type: string
      title:
        type: string
      creation_date: 
        type: string
      region:
        type: string
      program_type:
        type: string
      site:
        type: string
      access_control:
        type: string
      program_area:
        type: string
      special_processing:
        type: string
      comments:
        type: string
      description:
        type: string
      email_uid:
        type: string
  LogActivityRequest:
    type: object
    properties:
      employee_id:
        type: string
      lan_id:
        type: string
      office_code:
        type: string
      event_id:
        type: string


